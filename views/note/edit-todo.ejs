<% layout('/layout/boilerplate.ejs') %>

<style>
    body {
        background-color: #f8f9fa;
        font-family: 'Arial', sans-serif;
        margin: 0;
    }

    .container {
        max-width: 480px;
        margin: 50px auto;
        padding: 15px;
    }

    h1 {
        text-align: center;
        margin-bottom: 20px;
        font-size: 24px;
        color: #007bff;
    }

    .custom-list-item {
        margin-bottom: 10px;
        padding: 15px;
        background-color: #fff;
        border: 1px solid #d6d6d6;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .custom-check-label {
        display: flex;
        align-items: center;
    }

    .custom-check-input {
        margin-right: 10px;
    }

    .custom-todotext {
        flex-grow: 1;
        border: none;
        border-bottom: 1px solid #d6d6d6;
        padding: 8px;
        font-size: 16px;
    }

    .custom-edit-all-btn,
    .custom-add-btn {
        background-color: #007bff;
        color: #fff;
        border: none;
        cursor: pointer;
        padding: 8px;
        border-radius: 4px;
        transition: background-color 0.3s;
    }

    .custom-edit-all-btn {
        margin-left: 10px;
    }

    .custom-time-date-group {
        margin-top: 10px;
        display: flex;
        align-items: center;
    }

    label {
        margin-bottom: 0;
        margin-right: 10px;
        font-size: 14px;
        color: #333;
    }

    input[type="date"],
    input[type="time"],
    .custom-date-time-input {
        height: 40px;
        flex-grow: 1;
        padding: 8px;
        margin-bottom: 10px;
        border: 1px solid #d6d6d6;
        border-radius: 4px;
        font-size: 14px;
    }

    .custom-todotext {
        margin-left: 109px;
    }

    .custom-time-btn {
        margin-left: 10px;
        margin-right: 10px;
        padding: 8px;
        font-size: 14px;
        cursor: pointer;
        color: #007bff;
    }

    @media (max-width: 576px) {
        .custom-list-item {
            flex-direction: column;
            align-items: flex-start;
        }

        .custom-todotext {
            width: 100%;
            margin-right: 0;
        }

        .custom-edit-all-btn {
            width: 100%;
            margin-left: 0;
            margin-top: 10px;
        }

        input[type="date"],
        input[type="time"],
        .custom-date-time-input {
            width: 100%;
        }
    }
    .custom-list-item{
        background: #3d3b3b!important;
        color: #fff;
      }
</style>


<body>
    <div class="container custom-todo-container">
        <h1 class="text-center mb-4">Todo List</h1>
        <ul class="list-group" id="todoList">
            <li class="list-group-item custom-list-item">
                <form action="/user/<%= currentUser._id %>/todos/<%= currentTodo._id %>?_method=PUT" method="post">
                    <div class="custom-input-group">
                        <label class="custom-check-label" for="check<%= currentTodo._id %>">
                            <input type="checkbox" id="check<%= currentTodo._id %>" class="custom-check-input" name="completed" <%= currentTodo.completed ? 'checked' : '' %>>
                            <span class="custom-check-mark"></span>
                        </label>
                        <input type="text" name="text" value="<%= currentTodo.text %>" class="custom-todotext">
                        <button class="custom-edit-all-btn" type="submit">Save</button>
                        <% console.log(currentTodo.dateTime.toISOString().slice(0, 10)) %>
                        <% console.log(moment(currentTodo.dateTime).format('HH:mm')) %>
                        <% if (currentTodo) { %>
                        <div class="custom-time-date-group">
                            <label for="dateInput">Date:</label>
                            <input class="shift" type="date" id="dateInput" name="date" value="<%= currentTodo.dateTime.toISOString().slice(0, 10) %>">
                            <label class="shift" for="timeInput">Time:</label>
                            <input class="shift" type="time" id="timeInput" name="time" value="<%= moment(currentTodo.dateTime).format('HH:mm') %>">                        </div>
                        <% }else{ %>
                            <span class="material-symbols-outlined custom-time-btn" style="cursor: pointer;">
                                notification_add
                            </span>
                            <!-- <div class="custom-time-date-group">
                                <input type="datetime-local" placeholder="Add reminder" id="dateTimeInput" class="form-control-lg custom-date-time-input" name="dateTime" aria-label="Todo Date and Time">
                                <button class="btn btn-primary custom-add-btn" type="submit" id="addTodoBtn">Add</button>
                            </div>

                        <% } %>
                        
                    </div>
                </form>
            </li>
        </ul>
    </div>
</body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', async () => {
        const alarmicon = document.querySelector('.material-symbols-outlined');
        const customtimedategroup = document.querySelector('.custom-time-date-group');
        alarmicon.addEventListener('click', () => {
      
          customtimedategroup.style.display = 'block';
          alarmicon.style.display = 'none';
        })
        document.querySelectorAll('.custom-check-input').forEach(checkbox => {
            checkbox.addEventListener('change', async (event) => {
              const todoId = event.target.id.replace('check', ''); // Extract todoId from the checkbox id
              const isChecked = event.target.checked;
              try {
                await fetch(`/api/todos/${todoId}`, {
                  method: 'PATCH',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  body: JSON.stringify({ completed: isChecked }),
                });
                updateRemainingTime(todoId);
              } catch (error) {
                console.error('Error updating todo completion status:', error);
              }
            });
        });
      })
  
</script>